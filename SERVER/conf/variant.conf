#
# Sample Variant Server Configuration File.
# These values will override the defaults, as set by /conf/com/variant/server/boot/variant-default.conf
# See https://github.com/typesafehub/config for details on Typesafe Config.
#
# Copyright Â© 2015-2017 Variant, Inc. All Rights Reserved.
#

# Variant's default TCP/IP port.
# http.port = "5377"

# And default context
# play.http.context = "/variant"

# Play's application secret goes here. Not really a secure application so it's Okay to
# hardcode here.
play.http.secret.key = "ILq[fsTOadV4]WDvpe>k^2gYa;<qw3dCFbj7DQuL17iSwL1oTJFPXK5n_YajkQq8"

# Play's CORS filter with a rather permissive configuration.
play.filters.cors {

   # allow all paths
   pathPrefixes = ["/"]
   
   # allow all origins 
   allowedOrigins = null
  
   # allow the methods Variant uses.
   allowedHttpMethods = ["GET", "POST", "PUT", "DELETE"]
   
   # allow all headers
   allowedHttpHeaders = null
}
 
variant {
   # Schemata directory.
   # schemata.dir = "schemata"

   # Max number of concurrent connections.  Only one connection per client is recommended.
   # Connections do not expire but must be explicitly closed by the client. 
   # max.concurrent.connections = 100

   # Session timeout. Session vacuum thread will destroy sessions which have been idle
   # for at least this many seconds.
   # session.timeout = 900

   # How frequently (in seconds) should the session vacuum thread run?
   # session.vacuum.interval = 10

   # Max number of events which can be held in memory between flushes.
   # event.writer.buffer.size = 20000

   # Force event writer to flush to external storage after this many seconds,
   # even if percent full has not been reached.
   # event.writer.max.delay = 30

   # Default event flusher, if one is not explicitly configured in the experiment schema. 
   # Appends Variant events to the application log.
   # event.flusher.class.name = com.variant.server.api.EentFlusherAppLogger
   # Event flusher initializer to be used to inject state into the flusher. Default implementation
   # does not use any external state.
   # event.flusher.class.init = null
   # The following two alternate event flushers are also available:
   # 1. H2 1.4 JDBC.
   # event.flusher.class.name = com.variant.server.api.EventFlusherH2
   # event.flusher.class.init = {"url":"jdbc:h2:mem:variant;MVCC=true;DB_CLOSE_DELAY=-1;","user":"variant","password":"variant"}
   # 2. Postgres 9.1 JDBC.
   # event.flusher.class.name = com.variant.server.api.EventFlusherPostgres
   # event.flusher.class.init = {"url":"jdbc:postgresql://localhost/variant","user":"variant","password":"variant"}
      
}
