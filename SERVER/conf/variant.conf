#
# Sample Variant Server Configuration File.
# All values represent the defaults, as set in /conf/com/variant/server/boot/variant-default.conf
# To override a default value, uncomment and set below.
# For details on Lightbend Config see https://github.com/lightbend/config.
#
# Copyright Â© 2015-2018 Variant, Inc. All Rights Reserved.
#

 
variant {
   # Schemata directory.
   # schemata.dir = "schemata"

   # Session timeout. Session vacuum thread will destroy sessions which have been idle
   # for at least this many seconds.
   # session.timeout = 900

   # How frequently (in seconds) should the session vacuum thread run?
   # session.vacuum.interval = 10

   # Max number of events which can be held in memory between flushes.
   # event.writer.buffer.size = 20000

   # Force event writer to flush to external storage after this many seconds,
   # even if percent full has not been reached.
   # event.writer.max.delay = 30

   # Default event flusher, if one is not explicitly configured in the experiment schema. 
   # Appends Variant events to the server log at the INFO level. 
   # event.flusher.class.name = com.variant.server.api.EentFlusherServerLog
   # event.flusher.class.init = {"level":"info"}
   # The following two alternate event flushers are also available:
   # 1. H2 1.4 JDBC.
   # event.flusher.class.name = com.variant.extapi.std.flush.jdbc.TraceEventFlusherH2
   # event.flusher.class.init = {"url":"jdbc:h2:mem:variant;MVCC=true;DB_CLOSE_DELAY=-1;","user":"variant","password":"variant"}
   # 2. Postgres 9.1 JDBC.
   # event.flusher.class.name = com.variant.extapi.std.flush.jdbc.TraceEventFlusherPostgres
   # event.flusher.class.init = {"url":"jdbc:postgresql://localhost/variant","user":"variant","password":"variant"}
      
}

#
# Underlying Play! settings, used by Variant.
#
play {
    # HTTP Server context.
    # http.context = "/"
    
    # Play requires secret key.
    # http.secret.key = "ILq[fsTOadV4]WDvpe>k^2gYa;<qw3dCFbj7DQuL17iSwL1oTJFPXK5n_YajkQq8"    
    # filters.enabled += "play.filters.cors.CORSFilter"
    filters.cors {
        # allow all paths
        # pathPrefixes = ["/"]

        # allow all origins 
        # allowedOrigins = null

        # allow the methods Variant uses.
        # allowedHttpMethods = ["GET", "POST", "PUT", "DELETE"]

        # allow all request headers
        # allowedHttpHeaders = null
   
        # response headers which browsers will expose to JavaScript.                 
        # exposedHeaders = ["X-Connection-Status"]
    }
}
