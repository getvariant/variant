package com.variant.core.schema.parser;

import com.variant.core.UserError;
import com.variant.core.UserError.Severity;
import com.variant.core.schema.ParserMessage;

/**
 * Parser Message. Generated by Variant parser at run time and obtainable
 * from {@link ParserResponse}.
 * 
 * @author Igor Urisman
 * @since 0.5
 */
public class ParserMessageImpl implements ParserMessage {
	
	private final Severity severity;
	private final String message;
	private final int code;	
	private Location location = null;

	/**
	 * 
	 * @param error
	 * @param args
	 * @since 0.5
	 */
	 public ParserMessageImpl(UserError error, String...args) {
		severity = error.getSeverity();
		message = error.asMessage((Object[])args);
		code = error.getCode();
	}

	/**
	 * 
	 * @param error
	 * @param line
	 * @param column
	 * @param args
	 * @since 0.5
	 */
	public ParserMessageImpl(Location location, UserError error, String...args) {
		this(error, args);
		this.location = location;
	}

	//---------------------------------------------------------------------------------------------//
	//                                          PUBLIC                                             //
	//---------------------------------------------------------------------------------------------//

	/**
	 */
	@Override
	public Severity getSeverity() {
		return severity;
	}

	/**
	 */
	@Override
	public String getText() {
		return message;
	}
	
	/**
	 */
	@Override
	public int getCode() {
		return code;
	}
	
	/**
	 */
	@Override
	public Location getLocation() {
		return location;
	}
	
	//---------------------------------------------------------------------------------------------//
	//                                         PUBLIC EXT                                          //
	//---------------------------------------------------------------------------------------------//
	
	/**
	 * 
	 */
	@Override
	public String toString() {
		StringBuilder result = new StringBuilder();
		result.append("[").append(getCode()).append("] [").append(getSeverity().name()).append("] ").append(getText());
		if (location != null) result.append(" Location: ").append(location.asString());
		return result.toString();
	}

}
