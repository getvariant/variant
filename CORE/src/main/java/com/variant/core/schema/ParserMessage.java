package com.variant.core.schema;

import com.variant.core.impl.UserError.Severity;
import com.variant.core.schema.parser.ParserResponse;

/**
 * Represents a message generated by Variant schema parser. These are made available to
 * host code via {@link ParserResponse#getMessages()}.
 * 
 * @author Igor Urisman
 * @since 0.5
 */
public interface ParserMessage {
	
	/**
	 * Severity of the message.
	 * 
	 * @return An object of type {@link Severity}.
	 * @since 0.5
	 */
	public Severity getSeverity();
	
	/**
	 * Text of the message.
	 * 
	 * @return The text of the message.
	 * @since 0.5
	 */
	public String getText();
	
	/**
	 * Internally assigned code of this message. For reference purposes only.
	 * 
	 * @return Code string.
	 * @since 0.5
	 */
	public int getCode();

	/**
	 * Location, in the schema source, where this message was detected. Most messages will have the location
	 * information, though some won't, e.g. "'/meta' clause is missing."
	 * 
	 * @return An object of type {@link Location}.
	 * @since 0.8
	 */
	public Location getLocation();

	/**
	 * Location, in the schema source, where a parser message is emitted.
	 * Caller will be able to examine the implementation for methods revealing
	 * the location information, e.g. line number.
     *
     * @since 0.8
	 */
	public static interface Location {
		
		/**
		 * Path to the JSON element which emitted a parse error.
		 * 
		 * @return Path specification, e.g. "/meta", or null if syntax error.
		 * @since 0.8
		 */
		String getPath();
	}

}
